name: Create Artifac Python

# trigger on all push events to main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install linting libraries
        run: |
            cd src
            pip install flake8
      - name: Lint with flake8
        run: |
            # Select identifies which errors should cause the job to fail
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # The exit zero flag will show errors as warnings and not fail the run
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  documentation:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code code
        uses: actions/checkout@v2
      - name: Create pages directory
        run: mkdir docs
      - name: Convert markdown to HTML 
        uses: docker://pandoc/core:2.9
        with:
          args: README.md -t html -o docs/index.html
      - name: Deploy Pages site
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: docs
          
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: |
            cd src
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
      - name: Create zip bundle
        run: |
            cd src
            zip -r ../${{ github.sha }}.zip .
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: kenye-quotes-app
          path: ${{ github.sha }}.zip

      - name: Login to DockerHub
        uses : docker/login-action@v1
        with :
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push
        id : docker_build
        uses : docker/build-push-action@v2
        with :
          push: true
          tags: airist/apps:kenye-quotes

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

